{"version":3,"file":"static/js/131.8d2ac29c.chunk.js","mappings":"gLAaA,QATA,SAAgBA,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,gKCKA,MAAMI,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KA4FlB,QAxFA,SAAkBX,GAChB,MAAMgB,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,KACnB,OAAEC,GAAWnB,GACZoB,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAWjC,OATAC,EAAAA,EAAAA,YAAU,KACRC,MAAMC,EAAAA,EAAUC,SAAU,CACxBC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQR,EAAQQ,EAAIE,eAC1BC,OAAOC,GAAQA,GAAI,GACrB,KAGDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA/B,SAAA,EACEF,EAAAA,EAAAA,KAACkC,EAAAA,QAAM,CAACnC,MAAOkB,IAEdC,GAEGlB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CAAAjC,UACRF,EAAAA,EAAAA,KAACoC,EAAAA,SAAQ,CACPC,UAAWvB,EAAMwB,kBAAkBpC,SAElCgB,EAAKqB,KAAKC,IACTxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAI,CAAAvC,UACH8B,EAAAA,EAAAA,MAACU,EAAAA,aAAY,CAEXC,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAY/B,EAAMgC,aACpCC,MAAO5C,EAAOU,UACdmC,mBAAoB,CAAEC,MAAOnC,EAAMmC,OAAQ/C,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACvBsC,EAAKzC,SAERiC,EAAAA,EAAAA,MAAA,OAAKe,MAAO5C,EAAOI,uBAAuBL,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAI+C,MAAO,IAAK5C,EAAOO,cAAeuC,MAAOnC,EAAMgC,aAAc5C,SAC9DsC,EAAKU,WAEPV,EAAKW,WACJnB,EAAAA,EAAAA,MAAA,MAAIe,MAAO5C,EAAOS,YAAYV,SAAA,CAAC,WAE5B,IACAsC,EAAKW,gBAIZnB,EAAAA,EAAAA,MAAA,MAAIe,MAAO5C,EAAOC,QAAQF,SAAA,CACvBsC,EAAKY,gBAAgBb,KAAKc,IACzBrB,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACsD,EAAAA,EAAa,CACZpD,SAAUmD,EACVE,WAAY,CACVC,EAAG,aAITxD,EAAAA,EAAAA,KAAA,WATQqD,KAYXb,EAAKiB,UACJzB,EAAAA,EAAAA,MAAA,MAAA9B,SAAA,CACGsC,EAAKkB,cACN1D,EAAAA,EAAAA,KAAA,KAAG2D,KAAMnB,EAAKiB,SAAUV,MAAO,CAAEE,MAAOnC,EAAMmC,OAAQ/C,SACnDsC,EAAKiB,eAIRzD,EAAAA,EAAAA,KAAAiC,EAAAA,SAAA,SA3CDO,EAAKzC,MAAQyC,EAAKG,qBAmDjC3C,EAAAA,EAAAA,KAAC4D,EAAAA,QAAe,MAG5B,C","sources":["components/Header.jsx","components/Research.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Research(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.research, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item) => (\n                  <Fade>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={{ color: theme.color }}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                          {item.subtitle}\n                        </h4>\n                        {item.workType && (\n                          <h5 style={styles.inlineChild}>\n                            &nbsp;Â·\n                            {' '}\n                            {item.workType}\n                          </h5>\n                        )}\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                        {item.workLink ? (\n                          <li>\n                            {item.worklinkText}\n                            <a href={item.workLink} style={{ color: theme.color }}>\n                              {item.workLink}\n                            </a>\n                          </li>\n                        )\n                          : <></>}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner />}\n    </>\n  );\n}\n\nResearch.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Research;\n"],"names":["props","title","_jsx","className","children","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","theme","useContext","ThemeContext","header","data","setData","useState","useEffect","fetch","endpoints","research","method","then","res","json","experiences","catch","err","_jsxs","_Fragment","Header","Container","Timeline","lineColor","timelineLineColor","map","item","Fade","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","ReactMarkdown","components","p","workLink","worklinkText","href","FallbackSpinner"],"sourceRoot":""}